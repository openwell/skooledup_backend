{"version":3,"sources":["../../src/middleware/validateUser.js"],"names":["userValidation","req","res","next","model","getUserByEmail","body","email","row","auth","comparePassword","password","user"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;IAEMA,c;;;;;;;;qFACJ,iBAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEsBC,iBAAMC,cAAN,CAAqBJ,GAAG,CAACK,IAAJ,CAASC,KAA9B,CAFtB;;AAAA;AAEUC,gBAAAA,GAFV;;AAAA,qBAGQA,GAHR;AAAA;AAAA;AAAA;;AAAA,iDAIaL,IAAI,CAAC,GAAD,CAJjB;;AAAA;AAAA,iDAMWA,IAAI,EANf;;AAAA;AAAA;AAAA;AAAA,iDAQW,8BAAa,GAAb,EAAkBD,GAAlB,cARX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;wFAYA,kBAAgCD,GAAhC,EAAqCC,GAArC,EAA0CC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEsBC,iBAAMC,cAAN,CAAqBJ,GAAG,CAACK,IAAJ,CAASC,KAA9B,CAFtB;;AAAA;AAEUC,gBAAAA,GAFV;;AAAA,oBAGSA,GAHT;AAAA;AAAA;AAAA;;AAAA,kDAIa,8BAAa,GAAb,EAAkBN,GAAlB,EAAuB,eAAvB,CAJb;;AAAA;AAAA,oBAKgBO,oBAAKC,eAAL,CAAqBF,GAAG,CAACG,QAAzB,EAAmCV,GAAG,CAACK,IAAJ,CAASK,QAA5C,CALhB;AAAA;AAAA;AAAA;;AAAA,kDAMa,8BAAa,GAAb,EAAkBT,GAAlB,EAAuB,kBAAvB,CANb;;AAAA;AAQID,gBAAAA,GAAG,CAACW,IAAJ,GAAWJ,GAAX;AARJ,kDASWL,IAAI,EATf;;AAAA;AAAA;AAAA;AAAA,kDAWW,8BAAa,GAAb,EAAkBD,GAAlB,eAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;eAgBaF,c","sourcesContent":["import auth from '../utils/helpers';\nimport model from '../model/auth';\nimport errorHandler from './errorHandler';\n\nclass userValidation {\n  static async checkEmailExist(req, res, next) {\n    try {\n      const row = await model.getUserByEmail(req.body.email);\n      if (row) {\n        return next(409);\n      }\n      return next();\n    } catch (err) {\n      return errorHandler(500, res, err);\n    }\n  }\n\n  static async checkEmailPassword(req, res, next) {\n    try {\n      const row = await model.getUserByEmail(req.body.email);\n      if (!row) {\n        return errorHandler(401, res, 'Invalid Email');\n      } else if (!auth.comparePassword(row.password, req.body.password)) {\n        return errorHandler(401, res, 'Invalid Password');\n      }\n      req.user = row;\n      return next();\n    } catch (err) {\n      return errorHandler(500, res, err);\n    }\n  }\n}\n\nexport default userValidation;\n"],"file":"validateUser.js"}