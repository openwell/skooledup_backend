{"version":3,"sources":["../../src/controller/auth.js"],"names":["User","req","res","row","user","isAdmin","role","status","json","data","message","token","helpers","generateToken","id","model","createUser","email","body","password","hashPassword","name"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEMA,I;;;;;;;;2EACJ,iBAAmBC,GAAnB,EAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,GADN,GACYF,GAAG,CAACG,IADhB;AAEMC,gBAAAA,OAFN,GAEgBF,GAAG,CAACG,IAAJ,IAAY,OAAZ,GAAsB,IAAtB,GAA6B,KAF7C;AAAA,iDAGSJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AAE1BE,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,OAAO,EAAE,oBADL;AAEJC,oBAAAA,KAAK,EAAEC,oBAAQC,aAAR,CAAsBV,GAAG,CAACW,EAA1B,EAA8BT,OAA9B;AAFH;AAFoB,iBAArB,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4EAWA,kBAAoBJ,GAApB,EAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBa,iBAAMC,UAAN,CAAiB;AACjCC,kBAAAA,KAAK,EAAEhB,GAAG,CAACiB,IAAJ,CAASD,KADiB;AAEjCE,kBAAAA,QAAQ,EAAEP,oBAAQQ,YAAR,CAAqBnB,GAAG,CAACiB,IAAJ,CAASC,QAA9B,CAFuB;AAGjCE,kBAAAA,IAAI,EAAEpB,GAAG,CAACiB,IAAJ,CAASG,IAHkB;AAIjCf,kBAAAA,IAAI,EAAE;AAJ2B,iBAAjB,CADpB;;AAAA;AACQH,gBAAAA,GADR;AAOME,gBAAAA,OAPN,GAOgBF,GAAG,CAAC,CAAD,CAAH,CAAOG,IAAP,IAAe,OAAf,GAAyB,IAAzB,GAAgC,KAPhD;AAAA,kDAQSJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,GADkB;AAE1BE,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,OAAO,EAAE,qBADL;AAEJC,oBAAAA,KAAK,EAAEC,oBAAQC,aAAR,CAAsBV,GAAG,CAAC,CAAD,CAAH,CAAOW,EAA7B,EAAiCT,OAAjC;AAFH;AAFoB,iBAArB,CART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;eAiBaL,I","sourcesContent":["import model from '../model/auth';\nimport helpers from '../utils/helpers';\n\nclass User {\n  static async login(req, res) {\n    let row = req.user;\n    let isAdmin = row.role == 'admin' ? true : false;\n    return res.status(200).json({\n      status: 200,\n      data: {\n        message: 'Login successfully',\n        token: helpers.generateToken(row.id, isAdmin),\n      },\n    });\n  }\n  static async signup(req, res) {\n    const row = await model.createUser({\n      email: req.body.email,\n      password: helpers.hashPassword(req.body.password),\n      name: req.body.name,\n      role: 'user',\n    });\n    let isAdmin = row[0].role == 'admin' ? true : false;\n    return res.status(200).json({\n      status: 200,\n      data: {\n        message: 'signup successfully',\n        token: helpers.generateToken(row[0].id, isAdmin),\n      },\n    });\n  }\n}\nexport default User;\n"],"file":"auth.js"}