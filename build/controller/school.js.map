{"version":3,"sources":["../../src/controller/school.js"],"names":["User","req","res","body","school_name","school_logo","console","log","payLoad","model","createSchool","status","json","data","message","routine","getAllSchools","rows","id","params","patchSchoolById","deleteSchoolById"],"mappings":"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","sourcesContent":["import model from '../model/school';\nimport ErrorHandler from '../middleware/errorHandler';\n\nclass User {\n  static async createSchool(req, res) {\n    const { school_name, school_logo } = req.body;\n    console.log(req.body);\n    let payLoad = {\n      school_name: school_name,\n      school_logo: school_logo || '',\n    };\n    try {\n      await model.createSchool(payLoad);\n      return res.status(200).json({\n        status: 200,\n        data: {\n          message: 'success',\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      if (error.routine == '_bt_check_unique') {\n        ErrorHandler(409, res, 'School name already exist');\n      }\n    }\n  }\n  static async findAllSchool(req, res) {\n    const rows = await model.getAllSchools();\n    return res.status(200).json({\n      status: 200,\n      data: { message: 'success', data: rows },\n    });\n  }\n  static async updateSchoolById(req, res) {\n    const { school_name } = req.body;\n    const { id } = req.params;\n    const rows = await model.patchSchoolById(id, { school_name: school_name });\n    return res.status(200).json({\n      status: 200,\n      data: {\n        data: rows[0],\n        message: 'success',\n      },\n    });\n  }\n  static async deleteSchoolById(req, res) {\n    const { id } = req.params;\n    await model.deleteSchoolById(id);\n    // if deleted returns 1 else it returned 0\n    return res.status(200).json({\n      status: 200,\n      data: {\n        message: 'deleted successfully',\n      },\n    });\n  }\n}\nexport default User;\n"],"file":"school.js"}