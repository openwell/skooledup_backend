{"version":3,"sources":["../../src/controller/course.js"],"names":["User","req","res","body","course_name","department_id","degree_id","dur","tui_fee_local","tui_fee_int","levy","levy_non_african","local_app_fee_online","local_app_fee_paper","int_app_fee_online","int_app_fee_paper","study_mode_full_time","study_mode_part_time","min_req_local_aps","min_req_local_eng","min_req_local_add_lang","min_req_local_math","min_req_international","online_classes","app_opening_date","app_closing_date","note","hero_image","payLoad","duration","tuition_fee_local","tuition_fee_int","local_application_fee_online","local_application_fee_paper","international_application_fee_online","international_application_fee_paper","min_req_local_english","min_req_local_additional_lang","min_req_local_mathematics","application_opening_date","application_closing_date","model","createCourse","status","json","data","message","console","log","error","getAllCourses","rows","query","getAllCoursesByDepartDeg","id","params","patchCourseById","deleteCourseById"],"mappings":"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","sourcesContent":["import model from '../model/course';\n\nclass User {\n  static async createCourse(req, res) {\n    const {\n      course_name,\n      department_id,\n      degree_id,\n      // string\n      dur,\n      tui_fee_local,\n      tui_fee_int,\n      levy,\n      levy_non_african,\n      local_app_fee_online,\n      local_app_fee_paper,\n      int_app_fee_online,\n      int_app_fee_paper,\n      study_mode_full_time,\n      study_mode_part_time,\n      min_req_local_aps,\n      min_req_local_eng,\n      min_req_local_add_lang,\n      min_req_local_math,\n      min_req_international,\n      online_classes,\n      //   dates\n      app_opening_date,\n      app_closing_date,\n      //   text\n      note,\n      hero_image,\n    } = req.body;\n    let payLoad = {\n      course_name: course_name,\n      department_id: department_id,\n      degree_id: degree_id,\n      // string\n      duration: dur,\n      tuition_fee_local: tui_fee_local || '',\n      tuition_fee_int: tui_fee_int || '',\n      levy: levy || '',\n      levy_non_african: levy_non_african || '',\n      local_application_fee_online: local_app_fee_online || '',\n      local_application_fee_paper: local_app_fee_paper || '',\n      international_application_fee_online: int_app_fee_online || '',\n      international_application_fee_paper: int_app_fee_paper || '',\n      study_mode_full_time: study_mode_full_time || '',\n      study_mode_part_time: study_mode_part_time || '',\n      min_req_local_aps: min_req_local_aps || '',\n      min_req_local_english: min_req_local_eng || '',\n      min_req_local_additional_lang: min_req_local_add_lang || '',\n      min_req_local_mathematics: min_req_local_math || '',\n      min_req_international: min_req_international || '',\n      online_classes: online_classes || '',\n      //   dates\n      application_opening_date: app_opening_date || '',\n      application_closing_date: app_closing_date || '',\n      //   text\n      note: note || '',\n      hero_image: hero_image || '',\n    };\n    try {\n      await model.createCourse(payLoad);\n      return res.status(200).json({\n        status: 200,\n        data: {\n          message: 'success',\n        },\n      });\n    } catch (error) {\n      console.log(error);\n      return res.status(500).json({\n        status: 500,\n        data: {\n          message: 'error',\n          error: error,\n        },\n      });\n    }\n  }\n  static async findAllCourse(req, res) {\n    const rows = await model.getAllCourses();\n    return res.status(200).json({\n      status: 200,\n      data: { message: 'success', data: rows },\n    });\n  }\n  static async findAllCourseByDepartDeg(req, res) {\n    const { department_id, degree_id } = req.query;\n    console.log(department_id, degree_id);\n    try {\n      const rows = await model.getAllCoursesByDepartDeg({\n        department_id,\n        degree_id,\n      });\n      return res.status(200).json({\n        status: 200,\n        data: { message: 'success', data: rows },\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: 500,\n        data: { message: 'error', error: error },\n      });\n    }\n  }\n  static async updateCourseById(req, res) {\n    const { course_name } = req.body;\n    const { id } = req.params;\n    const rows = await model.patchCourseById(id, { course_name });\n    console.log(rows);\n    return res.status(200).json({\n      status: 200,\n      data: {\n        // data: rows[0],\n        message: 'success',\n      },\n    });\n  }\n  static async deleteCourseById(req, res) {\n    const { id } = req.params;\n    await model.deleteCourseById(id);\n    // if deleted returns 1 else it returned 0\n    return res.status(200).json({\n      status: 200,\n      data: {\n        message: 'deleted successfully',\n      },\n    });\n  }\n}\nexport default User;\n"],"file":"course.js"}